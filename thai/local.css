@font-face {
    font-family: 'Noto Serif Thai WF';
    src: url('https://r12a.github.io/shared/webfonts/NotoSerifThai-Regularwebfont.woff2');
    font-weight: normal;
    font-style: normal;
	}
[lang=th] { font-family: 'Noto Serif Thai WF', serif; font-size: 150%; }


h2 {
	margin-top: 4em !important;
	margin-bottom: 0em !important;
	}
.head h2, #abstract h2, #sotd h2 {
	margin-top: 0 !important;
	}
h3 {
	margin-top: 3em !important;
	}
h4  { 
	font-size: 100%; 
    font-weight: normal; 
    color: #005a9c; 
    margin-top: 2em;  
    }
.leadin {
	font-weight: bold;
	}

ins { 
	background-color: #99FF99; 
	text-decoration: none; 
	}
del { 
	display: inline; 
	color: silver; 
	}

figure { 
	margin-bottom: 2em; 
	text-align: center;
	}
figcaption {
	 text-align: center;
	margin: 0.5em 2em;
	font-style: italic;
	font-size: 90%;
	}
.figno:after {
	content: ':\00A0  ';
}

a.termref:link {
	color:#C60;
	text-decoration:none;
	border-bottom: 1px dotted #FC0; 
	}
a.termref:hover {
	color:#C60;
	text-decoration:none;
	border-bottom: 1px dotted #FC0; 
	}
a.termref:visited {
	color:#C60;
	text-decoration:none;
	border-bottom: 1px dotted #FC0; 
	}
a.termref:active {
	color:#C60;
	text-decoration:none;
	border-bottom: 1px dotted #FC0; 
	}

.qterm:before, .qchar:before { content: "'"; }
.qterm:after, .qchar:after { content: "'"; }
.quote:before { content: '"'; }
.quote:after { content: '"'; }
code { 
	color: #A52A2A; 
    font-family: Consolas, "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", Monaco, "Courier New", monospace; 
    font-size: 100%; 
    }
samp, kbd { 
	font-family: Consolas, "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", Monaco, "Courier New", monospace; 
    font-size: 100%; 
    }
.uname {
	text-transform: uppercase;
	font-size: 85%;
	letter-spacing:0.03em;
	}
.prompt {
    font-style: italic;
    color: #aaa;
    font-size: 90%;
    margin-bottom: 4em;
}

.large {
    font-size: 300%;
    }
.trans, .ipa {
    font-family: "GentiumPlus", serif;
    font-style: italic;
    }
.meaning:before {
    content:"‘";
}
.meaning:after {
    content:"’";
}
